CREATE TABLE employees1 (
    ename VARCHAR(50),
    dept_name VARCHAR(50),
    designation VARCHAR(50),
    salary INT,
    date_of_join DATE
);
INSERT INTO employees1(ename, dept_name, designation, salary, date_of_join)
VALUES
('KARAN', 'ACCOUNTING', 'DIRECTOR', 50000, '2012-11-17'),
('FARAH', 'RESEARCH', 'ANALYST', 30000, '1991-12-03'),
('SCINDIA', 'RESEARCH', 'ANALYST', 30000, '2002-12-09'),
('JOY', 'RESEARCH', 'MANAGER', 29750, '2011-04-02'),
('BHASKAR', 'SALES', 'MANAGER', 28500, '1999-05-01'),
('CHANDER', 'ACCOUNTING', 'MANAGER', 24500, '2000-06-09'),
('ANIL', 'SALES', 'SALESMAN', 16000, '1991-02-20'),
('TOMAR', 'SALES', 'SALESMAN', 15000, '2001-09-08'),
('MILIND', 'ACCOUNTING', 'CLERK', 13000, '2002-01-23'),
('SAXENA', 'SALES', 'SALESMAN', 12500, '1999-09-28'),
('TOMAR', 'SALES', 'SALESMAN', 14500, '1997-02-22'),
('ANAND', 'RESEARCH', 'CLERK', 11000, '1993-01-12'),
('GEORGE', 'SALES', 'CLERK', 9500, '1990-12-03'),
('SURESH', 'RESEARCH', 'CLERK', 8000, '1992-12-17');


select * from employees1;

(A)
SELECT ename 
FROM employees1
WHERE salary < 20000;

OUTPUT:
ANIL
TOMAR
MILIND
SAXENA
TOMAR

------------------------------------------------------------------------------------------------------------------------------------------------
(B)
SELECT *
FROM employees1
WHERE dept_name = 'SALES' AND designation = 'MANAGER';

OUTPUT:
BHASKAR	SALES	MANAGER	28500	1999-05-01
-------------------------------------------------------------------------------------------------------------------------------------------------
(C)
SELECT *
FROM employees1
WHERE ename LIKE 'S%';

OUTPUT:
SCINDIA	RESEARCH	ANALYST	30000	2002-12-09
SAXENA	SALES	   SALESMAN	12500	1999-09-28
SURESH	RESEARCH	CLERK	8000	1992-12-17
--------------------------------------------------------------------------------------------------------------------------------------------------
(D)
SELECT COUNT(*) AS total_employees
FROM employees1
WHERE dept_name = 'RESEARCH';
OUTPUT:
5
---------------------------------------------------------------------------------------------------------------------------------------------------
(E)
SELECT *
FROM employees1
WHERE date_of_join > '2010-01-01';
OUTPUT: 
KARAN	ACCOUNTING	DIRECTOR	50000	2012-11-17
JOY	    RESEARCH	MANAGER	    29750	2011-04-02
--------------------------------------------------------------------------------------------------------------------------------------------------
(F)
SELECT COUNT(*) AS employee_count
FROM employees1
WHERE salary BETWEEN 8000 AND 125000;
OUTPUT:
14
---------------------------------------------------------------------------------------------------------------------------------------------------
(G)
SELECT *
FROM employees1
ORDER BY ename;
OUTPUT:
ANAND	RESEARCH	CLERK	11000	1993-01-12
ANIL	SALES	  SALESMAN	16000	1991-02-20
BHASKAR	SALES	  MANAGER	28500	1999-05-01
CHANDER	ACCOUNTING	MANAGER	24500	2000-06-09
FARAH	RESEARCH	ANALYST	30000	1991-12-03
GEORGE	SALES	CLERK	9500	1990-12-03
JOY	RESEARCH	MANAGER	29750	2011-04-02
KARAN	ACCOUNTING	DIRECTOR	50000	2012-11-17
MILIND	ACCOUNTING	CLERK	13000	2002-01-23
SAXENA	SALES	SALESMAN	12500	1999-09-28
SCINDIA	RESEARCH	ANALYST	30000	2002-12-09
SURESH	RESEARCH	CLERK	8000	1992-12-17
TOMAR	SALES	SALESMAN	15000	2001-09-08
TOMAR	SALES	SALESMAN	14500	1997-02-22
------------------------------------------------------------------------------------------------------------------------------------------------------
(H)
SELECT *
FROM employees1
WHERE designation = 'SALESMAN' AND date_of_join > '1990-08-01';
OUTPUT:
ANIL	SALES	SALESMAN	16000	1991-02-20
TOMAR	SALES	SALESMAN	15000	2001-09-08
SAXENA	SALES	SALESMAN	12500	1999-09-28
TOMAR	SALES	SALESMAN	14500	1997-02-22
------------------------------------------------------------------------------------------------------------------------------------------------------
(I)
SELECT *
FROM employees1
WHERE designation = 'CLERK';
OUTPUT:
MILIND	ACCOUNTING	CLERK	13000	2002-01-23
ANAND	RESEARCH	CLERK	11000	1993-01-12
GEORGE	SALES   	CLERK	 9500   1990-12-03
SURESH	RESEARCH	CLERK	8000	1992-12-17
------------------------------------------------------------------------------------------------------------------------------------------------------
(J)
SELECT COUNT(*) AS salesman_count
FROM employees1
WHERE designation = 'SALESMAN' AND dept_name = 'SALES';
OUTPUT:
4
------------------------------------------------------------------------------------------------------------------------------------------------------
(K)
SELECT COUNT(*) AS total_employees
FROM employees1;
OUTPUT:
14
------------------------------------------------------------------------------------------------------------------------------------------------------
(L)
SELECT *
FROM employees1
WHERE date_of_join BETWEEN '1997-01-01' AND '2010-12-31';
OUTPUT:
SCINDIA	RESEARCH	ANALYST	30000	2002-12-09
BHASKAR	SALES	MANAGER	28500	1999-05-01
CHANDER	ACCOUNTING	MANAGER	24500	2000-06-09
TOMAR	SALES	SALESMAN	15000	2001-09-08
MILIND	ACCOUNTING	CLERK	13000	2002-01-23
SAXENA	SALES	SALESMAN	12500	1999-09-28
TOMAR	SALES	SALESMAN	14500	1997-02-22
-------------------------------------------------------------------------------------------------------------------------------------------------------
(M)
SELECT * 
FROM employees1
ORDER BY salary DESC;
OUTPUT:
KARAN	ACCOUNTING	DIRECTOR	50000	2012-11-17
FARAH	RESEARCH	ANALYST	30000	1991-12-03
SCINDIA	RESEARCH	ANALYST	30000	2002-12-09
JOY	    RESEARCH	MANAGER	29750	2011-04-02
BHASKAR	SALES	    MANAGER	28500	1999-05-01
CHANDER	ACCOUNTING	MANAGER	24500	2000-06-09
ANIL	SALES	   SALESMAN	16000	1991-02-20
TOMAR	SALES	   SALESMAN	15000	2001-09-08
TOMAR	SALES	   SALESMAN	14500	1997-02-22
MILIND	ACCOUNTING	CLERK	13000	2002-01-23
SAXENA	SALES	  SALESMAN	12500	1999-09-28
ANAND	RESEARCH	CLERK	11000	1993-01-12
GEORGE	SALES	   CLERK	9500	1990-12-03
SURESH	RESEARCH	CLERK	8000	1992-12-17
---------------------------------------------------------------------------------------------------------------------------------------------------------

==========> QUESTION 2:

CREATE TABLE STUDIES (
    PNAME VARCHAR(30),
    SPLACE VARCHAR(30),
    COURSE VARCHAR(30),
    CCOST NUMBER
);
INSERT INTO STUDIES (PNAME, SPLACE, COURSE, CCOST)
VALUES 
(('John', 'MIT', 'PGDCA', 10000),
('Jane', 'PRAGATHI', 'Data Science', 15000),
('Alice', 'Harvard', 'Artificial Intelligence', 18000),
('Rakesh', 'Oxford', 'Software Engineering', 12000),
('Emily', 'Cambridge', 'Cyber Security', 16000),
('Michael', 'Princeton', 'PGDCA', 14000),
('Sarah', 'Pentafour', 'Cloud Computing', 17000));


CREATE TABLE SOFTWARE (
    PNAME VARCHAR(30),
    TITLE VARCHAR(30),
    DEVIN VARCHAR(30),
    SCOST NUMBER,
    DCOST NUMBER,
    SOLD NUMBER
);
INSERT INTO SOFTWARE (PNAME, TITLE, DEVIN, SCOST, DCOST, SOLD)
VALUES 
(('JohN', 'AI Assistant', 'Python', 5000, 2000, 100),
('Jane', 'Data Analyzer', 'Oracle', 7000, 3000, 150),
('Alice', 'Image Recognizer', 'Java', 9000, 4000, 80),
('Rakesh', 'Web Scraper', 'Python', 3000, 1500, 120),
('Emily', 'Cyber Defense', 'C++', 11000, 5000, 90),
('Michael', 'Network Monitor', 'Oracle', 8000, 3500, 70),
('Sarah', 'Cloud Manager', 'VB', 6000, 2500, 110));


CREATE TABLE PROGRAMMER (
    PNAME VARCHAR(30),
    DOB DATE,
    DOJ DATE,
    SEX CHAR(5),
    PROF1 VARCHAR(30),
    PROF2 VARCHAR(30),
    SAL NUMBER
);
INSERT INTO PROGRAMMER (PNAME, DOB, DOJ, SEX, PROF1, PROF2, SAL)
VALUES
(('John', TO_DATE('1990-05-15', 'YYYY-MM-DD'), TO_DATE('2020-01-01', 'YYYY-MM-DD'), 'M', 'Python', 'AI', 75000),
('Jane', TO_DATE('1988-07-22', 'YYYY-MM-DD'), TO_DATE('2018-03-12', 'YYYY-MM-DD'), 'F', 'R', 'Data Science', 80000),
('Alice', TO_DATE('1992-09-10', 'YYYY-MM-DD'), TO_DATE('2019-06-05', 'YYYY-MM-DD'), 'F', 'Java', 'AI', 90000),
('Rakesh', TO_DATE('1985-04-18', 'YYYY-MM-DD'), TO_DATE('2016-11-25', 'YYYY-MM-DD'), 'M', 'Python', 'Web Development', 70000),
('Emily', TO_DATE('1991-12-01', 'YYYY-MM-DD'), TO_DATE('2021-04-20', 'YYYY-MM-DD'), 'F', 'C++', 'Cyber Security', 85000),
('Michael', TO_DATE('1987-08-30', 'YYYY-MM-DD'), TO_DATE('2017-08-14', 'YYYY-MM-DD'), 'M', 'JavaScript', 'Networking', 78000),
('Sarah', TO_DATE('1993-11-05', 'YYYY-MM-DD'), TO_DATE('2022-02-10', 'YYYY-MM-DD'), 'F', 'C', 'Cloud Computing', 88000));

//QUERIES:

1. SELECT AVG(SCOST) AS AvgSellingCost FROM SOFTWARE WHERE DEVIN = 'Oracle';
OUTPUT:
AvgSellingCost
7500
-----------------------------------------------------------------------------------------------------------------------------------------------
2. SELECT PNAME, FLOOR(MONTHS_BETWEEN(SYSDATE, DOB) / 12) AS Age, FLOOR(MONTHS_BETWEEN(SYSDATE, DOJ) / 12) AS Experience FROM PROGRAMMER;
OUTPUT:
PNAME	  Age	Experience
John	  34	4
Jane	  36	6
Alice	  32	5
Rakesh	  39	7
Michael	  37	7
Emily	  31	3
Sarah	  29	2
-----------------------------------------------------------------------------------------------------------------------------------------------
3. SELECT PNAME FROM STUDIES WHERE COURSE = 'PGDCA';
OUTPUT:
PNAME
John
Michael
-----------------------------------------------------------------------------------------------------------------------------------------------
4. SELECT MAX(SOLD) AS MaxSold FROM SOFTWARE;
OUTPUT:
MaxCopiesSold
150
-----------------------------------------------------------------------------------------------------------------------------------------------
5. SELECT PNAME, DOB FROM PROGRAMMER WHERE EXTRACT(MONTH FROM DOB) = 4;
OUTPUT:
PNAME	    DOB
Rakesh	    1985-04-18
-----------------------------------------------------------------------------------------------------------------------------------------------
6. SELECT MIN(CCOST) AS MinCourseFee FROM STUDIES;
OUTPUT:
LowestCourseFee
10000
-----------------------------------------------------------------------------------------------------------------------------------------------
7. SELECT COUNT(*) AS PGDCACount FROM STUDIES WHERE COURSE = 'PGDCA';
OUTPUT:
PGDCACount
2
-----------------------------------------------------------------------------------------------------------------------------------------------
8. SELECT SUM(SCOST * SOLD) AS Revenue FROM SOFTWARE WHERE DEVIN = 'C++';
OUTPUT:
TotalRevenue
990000
-----------------------------------------------------------------------------------------------------------------------------------------------
9. SELECT * FROM SOFTWARE WHERE PNAME = 'Rakesh';
OUTPUT:
PNAME	TITLE	    DEVIN	    SCOST	DCOST	SOLD
Rakesh	Web Scraper	Python	    3000	1500	120
-----------------------------------------------------------------------------------------------------------------------------------------------
10. SELECT COUNT(*) AS PentafourCount FROM STUDIES WHERE SPLACE = 'Pentafour';
OUTPUT:
PentafourCount
1
-----------------------------------------------------------------------------------------------------------------------------------------------
11. SELECT * FROM SOFTWARE WHERE SCOST * SOLD > 5000;
OUTPUT:
PNAME	    TITLE	            DEVIN	    SCOST	DCOST	SOLD
John	    AI Assistant	    Python	    5000	2000	100
Jane	    Data Analyzer	    Oracle	    7000	3000	150
Alice	    Image Recognizer	Java	    9000	4000	80
Rakesh	    Web Scraper	        Python	    3000	1500	120
Emily	    Cyber Defense	    C++ 	    11000	5000	90
Michael	    Network Monitor	    Oracle  	8000	3500	70
Sarah	    Cloud Manager	    VB      	6000	2500	110
-----------------------------------------------------------------------------------------------------------------------------------------------
12. SELECT PNAME, TITLE, CEIL(DCOST / SCOST) AS CopiesToRecover FROM SOFTWARE;
OUTPUT:
PNAME	TITLE	            CopiesToRecover
John	AI Assistant	    1
Jane	Data Analyzer	    1
Alice	Image Recognizer	1
Rakesh	Web Scraper	        1
Emily	Cyber Defense	    1
Michael	Network Monitor	    1
Sarah	Cloud Manager	    1
-----------------------------------------------------------------------------------------------------------------------------------------------
13. SELECT * FROM SOFTWARE WHERE SCOST * SOLD >= DCOST;
OUTPUT:
PNAME	    TITLE	            DEVIN	    SCOST	DCOST	SOLD
John	    AI Assistant	    Python	    5000	2000	100
Jane	    Data Analyzer	    Oracle	    7000	3000	150
Alice	    Image Recognizer	Java	    9000	4000	80
Rakesh	    Web Scraper	        Python	    3000	1500	120
Emily	    Cyber Defense	    C++ 	    11000	5000	90
Michael	    Network Monitor	    Oracle  	8000	3500	70
Sarah	    Cloud Manager	    VB      	6000	2500	110
-----------------------------------------------------------------------------------------------------------------------------------------------
14. SELECT MAX(SCOST) AS CostliestPrice FROM SOFTWARE WHERE DEVIN = 'VB';
OUTPUT:
CostliestInVB
6000
-----------------------------------------------------------------------------------------------------------------------------------------------
15. SELECT COUNT(*) AS OraclePackages FROM SOFTWARE WHERE DEVIN = 'Oracle';
OUTPUT:
OraclePackages
2
-----------------------------------------------------------------------------------------------------------------------------------------------
16. SELECT COUNT(*) AS PragathiCount FROM STUDIES WHERE SPLACE = 'PRAGATHI';
OUTPUT:
PragathiCount
1
-----------------------------------------------------------------------------------------------------------------------------------------------
17. SELECT COUNT(*) AS CourseFeeRangeCountv FROM STUDIES WHERE CCOST BETWEEN 10000 AND 15000;
OUTPUT:
CourseFeeRangeCount
4
-----------------------------------------------------------------------------------------------------------------------------------------------
18. SELECT AVG(CCOST) AS AvgCourseFee FROM STUDIES;
OUTPUT:
AvgCourseFee
14000
-----------------------------------------------------------------------------------------------------------------------------------------------
19. SELECT * FROM PROGRAMMER WHERE PROF1 = 'C' OR PROF2 = 'C';
OUTPUT:
PNAME     DOB           DOJ            SEX     PROF1      PROF2               SAL
Sarah     1993-11-05    2022-02-10     F       C          Cloud Computing     88000
-----------------------------------------------------------------------------------------------------------------------------------------------
20. SELECT COUNT(*) AS KnowCorPascal FROM PROGRAMMER WHERE PROF1 IN ('C', 'Pascal') OR PROF2 IN ('C', 'Pascal');
OUTPUT:
KnowCorPascal
0
-----------------------------------------------------------------------------------------------------------------------------------------------
21. SELECT COUNT(*) AS NotKnowingCandCPlusPlus FROM PROGRAMMER WHERE PROF1 NOT IN ('C', 'C++') AND PROF2 NOT IN ('C', 'C++');
OUTPUT:
NotKnowingCandCPlusPlus
5
-----------------------------------------------------------------------------------------------------------------------------------------------
22. SELECT MAX(FLOOR(MONTHS_BETWEEN(SYSDATE, DOB) / 12)) AS OldestAge FROM PROGRAMMER WHERE SEX = 'M';
OUTPUT:
OldestAge
39
-----------------------------------------------------------------------------------------------------------------------------------------------
23. SELECT AVG(FLOOR(MONTHS_BETWEEN(SYSDATE, DOB) / 12)) AS AvgFemaleAge FROM PROGRAMMER WHERE SEX = 'F';
OUTPUT:
AvgFemaleAge
32
-----------------------------------------------------------------------------------------------------------------------------------------------
24. SELECT PNAME,  FLOOR(MONTHS_BETWEEN(SYSDATE, DOJ) / 12) AS Experience FROM PROGRAMMER ORDER BY Experience DESC;
OUTPUT:
PNAME	    Experience
Rakesh	    7
Michael	    7
Jane	    6
Alice	    5
John	    4
Emily	    3
Sarah	    2
-----------------------------------------------------------------------------------------------------------------------------------------------
25. SELECT PNAME, DOB FROM PROGRAMMER WHERE EXTRACT(MONTH FROM DOB) = EXTRACT(MONTH FROM SYSDATE);
OUTPUT:
PNAME	DOB
(None)
-----------------------------------------------------------------------------------------------------------------------------------------------
26. SELECT COUNT(*) AS FemaleProgrammers FROM PROGRAMMER WHERE SEX = 'F';
OUTPUT:
FemaleProgrammers
3
-----------------------------------------------------------------------------------------------------------------------------------------------
27. SELECT DISTINCT PROF1 AS Language FROM PROGRAMMER WHERE SEX = 'M' UNION SELECT DISTINCT PROF2 AS Language FROM PROGRAMMER WHERE SEX = 'M';
OUTPUT:
Language
Python
AI
Web Development
JavaScript
Networking
-----------------------------------------------------------------------------------------------------------------------------------------------
28. SELECT AVG(SAL) AS AvgSalary FROM PROGRAMMER;
OUTPUT:
AvgSalary
80428.57
-----------------------------------------------------------------------------------------------------------------------------------------------
29. SELECT COUNT(*) AS SalaryRangeCount FROM PROGRAMMER WHERE SAL BETWEEN 5000 AND 7500;
OUTPUT:
SalaryRangeCount
0
-----------------------------------------------------------------------------------------------------------------------------------------------
30. SELECT * FROM PROGRAMMER WHERE PROF1 NOT IN ('C', 'C++', 'Pascal') AND PROF2 NOT IN ('C', 'C++', 'Pascal');
OUTPUT:
PNAME	DOB	        DOJ	        SEX	PROF1	          PROF2	        SAL
John	1990-01-01	2020-01-01	M	Python	          AI	        80000
Jane	1988-02-20	2018-02-20	F	Web Development	  JavaScript	85000
Alice	1992-03-15	2019-03-15	F	AI	              Python	    83000
Rakesh	1985-04-10	2017-04-10	M	Networking	      AI	        90000
Michael	1987-05-18	2017-05-18	M	Web Development	  JavaScript	82000
-----------------------------------------------------------------------------------------------------------------------------------------------
31. SELECT PNAME, TITLE, MAX(SCOST) AS CostliestPackage FROM SOFTWARE GROUP BY PNAME, TITLE ORDER BY PNAME;
OUTPUT:
PNAME	TITLE	            CostliestPackage
Alice	Image Recognizer	9000
Rakesh	Web Scraper	        3000
Emily	Cyber Defense	    11000
Jane	Data Analyzer	    7000
John	AI Assistant	    5000
Michael	Network Monitor	    8000
Sarah	Cloud Manager	    6000
-----------------------------------------------------------------------------------------------------------------------------------------------
32. SELECT 'Programmer Mr. ' || PNAME || ' – has ' || FLOOR(MONTHS_BETWEEN(SYSDATE, DOJ) / 12) || ' years of experience' AS Output FROM PROGRAMMER WHERE SEX = 'M';
OUTPUT:
Output
Programmer Mr. John – has 4 years of experience
Programmer Mr. Rakesh – has 7 years of experience
Programmer Mr. Michael – has 7 years of experience
-----------------------------------------------------------------------------------------------------------------------------------------------


QUESTION NUMBER 3
Table 1: DEPT
CREATE TABLE DEPT (
    DEPTNO NUMBER(2) NOT NULL,
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13),
    PRIMARY KEY (DEPTNO)
);

Table 2: EMP
CREATE TABLE EMP (
    EMPNO NUMBER(4) NOT NULL,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(9),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7, 2),
    COMM NUMBER(7, 2),
    DEPTNO NUMBER(2),
    PRIMARY KEY (EMPNO),
    FOREIGN KEY (DEPTNO) REFERENCES DEPT(DEPTNO)
);

INSERT INTO DEPT (DEPTNO, DNAME, LOC)
VALUES 
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

INSERT INTO EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES
(7839, 'KING', 'PRESIDENT', NULL, '1981-11-17', 5000, NULL, 10),
(7566, 'JONES', 'MANAGER', 7839, '1981-04-02', 2975, NULL, 20),
(7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01', 2850, NULL, 30),
(7782, 'CLARK', 'MANAGER', 7839, '1981-06-09', 2450, NULL, 10),
(7788, 'SCOTT', 'ANALYST', 7566, '1982-12-09', 3000, NULL, 20),
(7902, 'FORD', 'ANALYST', 7566, '1981-12-03', 3000, NULL, 20),
(7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08', 1500, 0, 30),
(7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28', 1250, 1400, 30),
(7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20', 1600, 300, 30),
(7521, 'WARD', 'SALESMAN', 7698, '1981-02-22', 1450, 500, 30),
(7934, 'MILLER', 'CLERK', 7782, '1982-01-23', 1300, NULL, 10),
(7876, 'ADAMS', 'CLERK', 7788, '1983-01-12', 1100, NULL, 20),
(7900, 'JAMES', 'CLERK', 7698, '1981-12-03', 950, NULL, 30);

(1)
SELECT DISTINCT e1.EMPNO, e1.ENAME, e1.JOB
FROM EMP e1
WHERE e1.EMPNO IN (SELECT e2.MGR FROM EMP e2 WHERE e2.MGR IS NOT NULL);

OUTPUT:
7839	KING	PRESIDENT
7566	JONES	MANAGER
7698	BLAKE	MANAGER
7782	CLARK	MANAGER
7788	SCOTT	ANALYST
----------------------------------------------------------------------------------------------------------------------------------------------------

(2)
SELECT * 
FROM EMP
WHERE DEPTNO = 10
AND (SELECT COUNT(*) FROM EMP WHERE DEPTNO = 10) > 10;
OUTPUT:
This query will return no rows
-------------------------------------------------------------------------------------------------------------------------------------------------------
(3)
SELECT e1.ENAME AS Employee, 
       e2.ENAME AS Manager
FROM EMP e1
LEFT JOIN EMP e2 
ON e1.MGR = e2.EMPNO;
OUTPUT:
Employee Manager
KING	NULL
JONES	KING
BLAKE	KING
CLARK	KING
SCOTT	JONES
FORD	JONES
TURNER	BLAKE
MARTIN	BLAKE
ALLEN	BLAKE
WARD	BLAKE
MILLER	CLARK
ADAMS	SCOTT
JAMES	BLAKE
-----------------------------------------------------------------------------------------------------------------------------------------------------------
(4)
SELECT e1.ENAME AS Employee
FROM EMP e1
WHERE e1.EMPNO NOT IN (SELECT DISTINCT MGR FROM EMP WHERE MGR IS NOT NULL);

OUTPUT:
Employee
SCOTT
FORD
TURNER
MARTIN
ALLEN
WARD
MILLER
ADAMS
JAMES
------------------------------------------------------------------------------------------------------------------------------------------------------------
(5)
SELECT * 
FROM EMP
WHERE SAL > (SELECT MIN(SAL) FROM EMP WHERE DEPTNO = 20);
OUTPUT:
EMPNO	ENAME	JOB 	     MGR	HIREDATE	SAL 	COMM	DEPTNO
7839	KING	PRESIDENT	NULL	1981-11-17	5000	NULL	10
7566	JONES	MANAGER	    7839 	1981-04-02	2975	NULL	20
7698	BLAKE	MANAGER 	7839	1981-05-01	2850	NULL	30
7782	CLARK	MANAGER 	7839	1981-06-09	2450	NULL	10
7788	SCOTT	ANALYST 	7566	1982-12-09	3000	NULL	20
7902	FORD	ANALYST 	7566	1981-12-03	3000	NULL	20
7844	TURNER	SALESMAN    7698	1981-09-08	1500	0   	30
7654	MARTIN	SALESMAN	7698	1981-09-28	1250	1400	30
7499	ALLEN	SALESMAN	7698	1981-02-20	1600	300 	30
7521	WARD	SALESMAN	7698	1981-02-22	1450	500 	30
7934	MILLER	CLERK   	7782	1982-01-23	1300	NULL	10
---------------------------------------------------------------------------------------------------------------------------------------------------------
(6)
SELECT * 
FROM EMP
WHERE SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB = 'MANAGER');
OUTPUT:
EMPNO	ENAME	JOB     	MGR 	HIREDATE	SAL 	COMM	DEPTNO
7839	KING	PRESIDENT 	NULL	1981-11-17	5000	NULL	10
7788	SCOTT	ANALYST 	7566	1982-12-09	3000	NULL	20
7902	FORD	ANALYST 	7566	1981-12-03	3000	NULL	20
------------------------------------------------------------------------------------------------------------------------------------------------------------
(7)
SELECT JOB, MAX(SAL) AS Highest_Salary
FROM EMP
GROUP BY JOB;

OUTPUT:

JOB     	Highest_Salary
PRESIDENT	5000
MANAGER 	2975
ANALYST 	3000
SALESMAN	1600
CLERK   	1300
-----------------------------------------------------------------------------------------------------------------------------------------------------------
(8)
SELECT e.*
FROM EMP e
JOIN (
    SELECT DEPTNO, MAX(HIREDATE) AS Latest_Hire_Date
    FROM EMP
    GROUP BY DEPTNO
) latest ON e.DEPTNO = latest.DEPTNO AND e.HIREDATE = latest.Latest_Hire_Date;

OUTPUT:
EMPNO	ENAME	JOB     	MGR 	HIREDATE	SAL 	COMM	DEPTNO
7839	KING	PRESIDENT	NULL	1981-11-17	5000	NULL	10
7788	SCOTT	ANALYST 	7566	1982-12-09	3000	NULL	20
7844	TURNER	SALESMAN	7698	1981-09-08	1500	0   	30
---------------------------------------------------------------------------------------------------------------------------------------------------------------
(9)
SELECT EXTRACT(YEAR FROM HIREDATE) AS Year, COUNT(*) AS Number_of_Employees
FROM EMP
GROUP BY EXTRACT(YEAR FROM HIREDATE)
ORDER BY Number_of_Employees DESC;

OUTPUT:
Year	Number_of_Employees
1981	5
1982	3
1983	1
------------------------------------------------------------------------------------------------------------------------------------------------------
(10)
SELECT DEPTNO, SUM(SAL + NVL(COMM, 0)) AS Total_Remuneration
FROM EMP
GROUP BY DEPTNO
ORDER BY Total_Remuneration DESC;

OUTPUT:
DEPTNO	Total_Remuneration
30  	9400
20  	9000
10  	8750
----------------------------------------------------------------------------------------------------------------------------------------------------------------
(11)
SELECT EMPNO, ENAME, JOB, HIREDATE, SAL, 
       CASE 
           WHEN HIREDATE = (SELECT MAX(HIREDATE) FROM EMP) 
           THEN '*' 
           ELSE '' 
       END AS Marker
FROM EMP;

OUTPUT:

EMPNO	ENAME	JOB     	HIREDATE	SAL 	Marker
7839	KING	PRESIDENT	1981-11-17	5000	
7788	SCOTT	ANALYST 	1982-12-09	3000	
7902	FORD	ANALYST 	1981-12-03	3000	
7934	MILLER	CLERK   	1982-01-23	1300	  *
----------------------------------------------------------------------------------------------------------------------------------------------------------------
(12)
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO
FROM EMP e
WHERE SAL > (SELECT AVG(SAL) 
             FROM EMP 
             WHERE DEPTNO = e.DEPTNO);

OUTPUT:

EMPNO	ENAME	JOB     	SAL 	DEPTNO
7839	KING	PRESIDENT	5000	10
7566	JONES	MANAGER 	2975	20
7698	BLAKE	MANAGER 	2850	30
7788	SCOTT	ANALYST 	3000	20
7902	FORD	ANALYST 	3000	20
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
(13)
SELECT SAL
FROM (
    SELECT SAL, ROW_NUMBER() OVER (ORDER BY SAL DESC) AS rnk
    FROM EMP
) 
WHERE rnk = 3;

OUTPUT:
SAL
3000
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
(14)
SELECT EMPNO, ENAME, JOB, HIREDATE, SAL, DEPTNO, COUNT(*)
FROM EMP
GROUP BY EMPNO, ENAME, JOB, HIREDATE, SAL, DEPTNO
HAVING COUNT(*) > 1;

OUTPUT:
EMPNO	ENAME	JOB     	HIREDATE	SAL 	DEPTNO	COUNT(*)
7499	ALLEN	SALESMAN	1981-02-20	1600	30  	2
7844	TURNER	SALESMAN	1981-09-08	1500	30     	2
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
(15)
SELECT ENAME, HIREDATE,
       FLOOR(MONTHS_BETWEEN(SYSDATE, HIREDATE) / 12) AS Years,
       MOD(MONTHS_BETWEEN(SYSDATE, HIREDATE), 12) AS Months
FROM EMP;

OUTPUT:
ENAME	HIREDATE	Years	Months
KING	1981-11-17	42  	10
SCOTT	1982-12-09	41  	9
FORD	1981-12-03	42  	9
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
